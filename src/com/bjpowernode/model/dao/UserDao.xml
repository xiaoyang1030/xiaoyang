<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpowernode.model.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.bjpowernode.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="position_id" jdbcType="VARCHAR" property="positionId" />
    <result column="pname" jdbcType="VARCHAR" property="province.pname" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, real_name, sex, mobile, email, password, position_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
     t.id,t.user_name,t.real_name,t.sex,t.mobile,t.email,t.position_id,p.pid,p.pname
    from t_user t left join province p on t.position_id=p.pid
    where
    t.id = #{id,jdbcType=INTEGER}

  </select>

  <select id="selectTotalNum"  resultType="integer">
    select
   count(1)
    from t_user t left join province p on t.position_id=p.pid
    <where>
      <if test="userName!=null and userName!=''">
        t.user_name like concat ('%',#{userName},'%')
      </if>
      <if test="positionId !=null and positionId!=''">
        and t.position_id=#{positionId}
      </if>
      <if test="sex!=null and sex!=''">
        and t.sex=#{sex}
      </if>
      <if test="mobile!=null and mobile!=''">
        and t.mobile like concat('%',#{mobile},'%')
      </if>
    </where>
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select
   t.id,t.user_name,t.real_name,t.sex,t.mobile,t.email,t.position_id,p.pid,p.pname
    from t_user t left join province p on t.position_id=p.pid
  </select>

  <select id="selectOne" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user where user_name=#{param1} and password=#{param2}
  </select>

  <select id="selectUsers" resultMap="BaseResultMap">
    select
    t.id,t.user_name,t.real_name,t.sex,t.mobile,t.email,t.position_id,p.pid,p.pname
    from t_user t left join province p on t.position_id=p.pid
    <where>
      <if test="userName!=null and userName!=''">
        t.user_name like concat ('%',#{userName},'%')
      </if>
      <if test="positionId !=null and positionId!=''">
        and t.position_id=#{positionId}
      </if>
      <if test="sex!=null and sex!=''">
        and t.sex=#{sex}
      </if>
      <if test="mobile!=null and mobile!=''">
        and t.mobile like concat('%',#{mobile},'%')
      </if>
    </where>
  </select>




  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.bjpowernode.entity.User" useGeneratedKeys="true">
    insert into t_user (user_name, real_name, sex, 
      mobile, email, password,
      position_id)
    values (#{userName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, 
      #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{positionId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.bjpowernode.entity.User" useGeneratedKeys="true">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpowernode.entity.User">
    update t_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        note = #{password,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null or positionId !=''">
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="updateByProvinceId" >
    update t_user
    set
      position_id = null
    where position_id = #{positionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjpowernode.entity.User">
    update t_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        note = #{password,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="delbatch">
    delete from t_user where id in
    <foreach collection="array" open="(" close=")" separator="," item="id">
    #{id}
    </foreach>
  </delete>
</mapper>